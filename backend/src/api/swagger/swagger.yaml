openapi: 3.0.0

info:
  version: 0.8.3
  title: ilSaye Backend API
  description: An event communication backend for large audiences written in Nodejs, with express and Sequelize

schemes:
  - https
  - http

servers:
  - url: https://ilsayebackend.azurewebsites.net/api/v1
    description: Main (production) server
  - url: http://localhost:8080/api/v1
    description: Internal staging server for testing

tags:
  - name: auth
    description: these endpoints handle authentication tokens lifecycle
  - name: private
    description: these endpoints require authentication, they track sessions
  - name: public
    description: these endpoints do not require authentication
  - name: websocket
    description: parts of the API are embedded in websocket RTC emissions

paths:

  /login:
    post:
      tags:
        - auth
      summary: standard user pass login
  /logingoogle:
    post:
      tags:
        - auth
      summary: google oauth2
  /loginfacebook:
    post:
      tags:
        - auth
      summary: facebook oauth
  /logout:
    get:
      tags:
        - auth
      summary: invalidates user session

  /eventjoin:
    post:
      tags:
        - private
      summary: subscribe to live event - recieve updates
  /eventleave:
    get:
      tags:
        - private
      summary: unsubscribe to live event
  /eventcreate:
    get:
      tags:
        - private
      summary: create live event

  /socket/privateapi:
    delete:
      tags:
        - websocket
        - public
      summary: messages command line
  /socket/publicapi:
    delete:
      tags:
        - websocket
        - private
      summary: users online counter



  /dbtest:
    get:
      tags:
        - public
      summary: Test a db fetch call
      description: retrieves the latest entry from the test_table
      responses:
        200:
          description: A row object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/testtextModel'
        503:
          decription: Server Error
          content:
            text/plain:
              schema:
                type: string
                example: server error



components:
  schemas:
    testtextModel:
      title: Testtext db model
      type: object
      properties:
        pk:
          type: number
          description: sql table primary key
        text:
          type: string
          description: Message text
        date:
          type: string
          description: date time
    listPersons:
      title: List
      type: array
      items:
        required:
          - username
        properties:
          firstName:
            type: string
          lastName:
            type: string
          username:
            type: string